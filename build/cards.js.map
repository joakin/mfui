{"version":3,"sources":["/w/extensions/Cards/cards.js","/w/extensions/Cards/webpack/bootstrap b94fe4c75742347d4c8b","/w/extensions/Cards/./src/cards/index.js","/w/extensions/Cards/./~/hogan.js/lib/hogan.js","/w/extensions/Cards/./src/cards/CardListView.js","/w/extensions/Cards/./src/cards/CardModel.js","/w/extensions/Cards/./src/cards/CardView.js","/w/extensions/Cards/./~/hogan.js/lib/compiler.js","/w/extensions/Cards/./~/hogan.js/lib/template.js","/w/extensions/Cards/./src/cards/card.hogan","/w/extensions/Cards/./src/cards/cards.hogan","/w/extensions/Cards/./src/cards/CardsGateway.js","/w/extensions/Cards/./src/cards/css.escape.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","window","mw","cards","CardModel","CardView","CardListView","CardsGateway","Hogan","Template","template","cardViews","self","this","$el","$","render","each","i","cardView","append","OO","initClass","prototype","attributes","apply","arguments","inheritClass","EventEmitter","set","key","value","silent","event","emit","get","model","on","bind","_render","replaceWith","extend","thumbnailUrl","CSS","escape","cleanTripleStache","token","n","substr","length","substring","trim","s","replace","tagChange","tag","text","index","charAt","l","buildTree","tokens","kind","stack","customTags","instructions","opener","tail","shift","allowedInSuper","Error","tags","isOpener","push","nodes","pop","isCloser","end","last","o","close","open","stringifySubstitutions","obj","items","esc","join","stringifyPartials","codeObj","partials","name","subs","rSlash","rQuot","rNewline","rCr","rLineSep","rParagraphSep","chooseMethod","indexOf","createPartial","node","context","prefix","sym","serialNo","code","indent","tripleStache","write","rIsWhitespace","#","^","<","/","!",">","=","_v","{","&","_t","scan","delimiters","addBuf","buf","String","lineIsWhitespace","isAllWhitespace","j","lineStart","match","filterLine","haveSeenTag","noNewLine","next","toString","splice","seenTag","changeDelimiters","ctag","closeIndex","split","otag","len","IN_TEXT","IN_TAG_TYPE","IN_TAG","state","tagType","\n","stringify","options","wrapMain","generate","tree","walk","asString","makeTemplate","makePartials","Function","codegen","ctx","inPartial","nodelist","func","parse","sectionTags","cache","cacheKey","disableLambda","modelGet","compile","instance","findInScope","scope","doModelGet","val","undefined","createSpecializedPartial","stackSubs","stackPartials","stackText","PartialTemplate","Substitutions","partial","subsText","coerceToString","hoganEscape","str","hChars","test","rAmp","rLt","rGt","rApos","compiler","r","v","t","ri","ep","symbol","base","activeSub","rp","rs","section","isArray","inverted","start","pass","ms","d","returnFound","found","names","f","cx","mv","ls","oldTags","b","ct","fl","textSource","result","sub","Array","a","Object","H","T","api","isValidThumbnail","thumb","source","THUMB_WIDTH","getCards","articleTitles","thumbWidth","article","Deferred","action","prop","explaintext","exlimit","exintro","exsentences","pithumbsize","titles","continue","formatversion","done","data","query","pages","map","page","title","url","util","getUrl","hasThumbnail","thumbnail","extract","resolve","fail","global","root","InvalidCharacterError","message","codeUnit","string","firstCodeUnit","charCodeAt"],"mappings":"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","file":"cards.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/w/extensions/Cards/build\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @class mw.cards\n\t * @singleton\n\t */\n\twindow.mw.cards = module.exports = {\n\t\tCardModel: __webpack_require__( 3 ),\n\t\tCardView: __webpack_require__( 4 ),\n\t\tCardListView: __webpack_require__( 2 ),\n\t\tCardsGateway: __webpack_require__( 9 )\n\t};\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t *  Copyright 2011 Twitter, Inc.\n\t *  Licensed under the Apache License, Version 2.0 (the \"License\");\n\t *  you may not use this file except in compliance with the License.\n\t *  You may obtain a copy of the License at\n\t *\n\t *  http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t *  Unless required by applicable law or agreed to in writing, software\n\t *  distributed under the License is distributed on an \"AS IS\" BASIS,\n\t *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t *  See the License for the specific language governing permissions and\n\t *  limitations under the License.\n\t */\n\t\n\t// This file is for use with Node.js. See dist/ for browser files.\n\t\n\tvar Hogan = __webpack_require__(5);\n\tHogan.Template = __webpack_require__(6).Template;\n\tHogan.template = Hogan.Template;\n\tmodule.exports = Hogan;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * View that renders multiple {@link mw.cards.CardView cards}\n\t *\n\t * @class mw.cards.CardListView\n\t * @param {mw.cards.CardView[]} cardViews\n\t */\n\tfunction CardListView( cardViews ) {\n\t\tvar self = this;\n\t\n\t\t/**\n\t\t * @property {mw.cards.CardView[]|Array}\n\t\t */\n\t\tthis.cardViews = cardViews || [];\n\t\n\t\t/**\n\t\t * @property {jQuery}\n\t\t */\n\t\tthis.$el = $( this.template.render() );\n\t\n\t\t// We don't want to use template partials because we want to\n\t\t// preserve event handlers of each card view.\n\t\t$.each( this.cardViews, function ( i, cardView ) {\n\t\t\tself.$el.append( cardView.$el );\n\t\t} );\n\t}\n\tOO.initClass( CardListView );\n\t\n\t/**\n\t * @property {Object} compiled template\n\t */\n\tCardListView.prototype.template = __webpack_require__( 8 );\n\t\n\tmodule.exports = CardListView;\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Model for an article\n\t * It is the single source of truth about a Card, which is a representation\n\t * of a wiki article. It emits a 'change' event when its attribute changes.\n\t * A View can listen to this event and update the UI accordingly.\n\t *\n\t * @class mw.cards.CardModel\n\t * @extends OO.EventEmitter\n\t * @param {Object} attributes article data, such as title, url, etc. about\n\t *  an article\n\t */\n\tfunction CardModel( attributes ) {\n\t\tCardModel.super.apply( this, arguments );\n\t\t/**\n\t\t * @property {Object} attributes of the model\n\t\t */\n\t\tthis.attributes = attributes;\n\t}\n\tOO.inheritClass( CardModel, OO.EventEmitter );\n\t\n\t/**\n\t * Set a model attribute.\n\t * Emits a 'change' event with the object whose key is the attribute\n\t * that's being updated and value is the value that's being set. The event\n\t * can also be silenced.\n\t *\n\t * @param {String} key attribute that's being set\n\t * @param {Mixed} value the value of the key param\n\t * @param {Boolean} [silent] whether to emit the 'change' event. By default\n\t *  the 'change' event will be emitted.\n\t */\n\tCardModel.prototype.set = function ( key, value, silent ) {\n\t\tvar event = {};\n\t\n\t\tthis.attributes[ key ] = value;\n\t\tif ( !silent ) {\n\t\t\tevent[ key ] = value;\n\t\t\tthis.emit( 'change', event );\n\t\t}\n\t};\n\t\n\t/**\n\t * Get the model attribute's value.\n\t *\n\t * @param key attribute that's being looked up\n\t * @returns {Mixed}\n\t */\n\tCardModel.prototype.get = function ( key ) {\n\t\treturn this.attributes[ key ];\n\t};\n\t\n\tmodule.exports = CardModel;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__( 10 );\n\t\n\t/**\n\t * Renders a Card model and updates when it does.\n\t *\n\t * @class mw.cards.CardView\n\t * @param {mw.cards.CardModel} model\n\t */\n\tfunction CardView( model ) {\n\t\t/**\n\t\t * @property {mw.cards.CardModel}\n\t\t */\n\t\tthis.model = model;\n\t\n\t\t// listen to model changes and re-render the view\n\t\tthis.model.on( 'change', this.render.bind( this ) );\n\t\n\t\t/**\n\t\t * @property {jQuery}\n\t\t */\n\t\tthis.$el = $( this._render() );\n\t}\n\tOO.initClass( CardView );\n\t\n\t/**\n\t * @property {Object} compiled template\n\t */\n\tCardView.prototype.template = __webpack_require__( 7 );\n\t\n\t/**\n\t * Replace the html of this.$el with a newly rendered html using the model\n\t * attributes.\n\t */\n\tCardView.prototype.render = function () {\n\t\tthis.$el.replaceWith( this._render() );\n\t};\n\t\n\t/**\n\t * Renders the template using the model attributes.\n\t *\n\t * @ignore\n\t */\n\tCardView.prototype._render = function () {\n\t\tvar attributes = $.extend( {}, this.model.attributes );\n\t\tattributes.thumbnailUrl = CSS.escape( attributes.thumbnailUrl );\n\t\n\t\treturn this.template.render( attributes );\n\t};\n\t\n\tmodule.exports = CardView;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t *  Copyright 2011 Twitter, Inc.\n\t *  Licensed under the Apache License, Version 2.0 (the \"License\");\n\t *  you may not use this file except in compliance with the License.\n\t *  You may obtain a copy of the License at\n\t *\n\t *  http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t *  Unless required by applicable law or agreed to in writing, software\n\t *  distributed under the License is distributed on an \"AS IS\" BASIS,\n\t *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t *  See the License for the specific language governing permissions and\n\t *  limitations under the License.\n\t */\n\t\n\t(function (Hogan) {\n\t  // Setup regex  assignments\n\t  // remove whitespace according to Mustache spec\n\t  var rIsWhitespace = /\\S/,\n\t      rQuot = /\\\"/g,\n\t      rNewline =  /\\n/g,\n\t      rCr = /\\r/g,\n\t      rSlash = /\\\\/g,\n\t      rLineSep = /\\u2028/,\n\t      rParagraphSep = /\\u2029/;\n\t\n\t  Hogan.tags = {\n\t    '#': 1, '^': 2, '<': 3, '$': 4,\n\t    '/': 5, '!': 6, '>': 7, '=': 8, '_v': 9,\n\t    '{': 10, '&': 11, '_t': 12\n\t  };\n\t\n\t  Hogan.scan = function scan(text, delimiters) {\n\t    var len = text.length,\n\t        IN_TEXT = 0,\n\t        IN_TAG_TYPE = 1,\n\t        IN_TAG = 2,\n\t        state = IN_TEXT,\n\t        tagType = null,\n\t        tag = null,\n\t        buf = '',\n\t        tokens = [],\n\t        seenTag = false,\n\t        i = 0,\n\t        lineStart = 0,\n\t        otag = '{{',\n\t        ctag = '}}';\n\t\n\t    function addBuf() {\n\t      if (buf.length > 0) {\n\t        tokens.push({tag: '_t', text: new String(buf)});\n\t        buf = '';\n\t      }\n\t    }\n\t\n\t    function lineIsWhitespace() {\n\t      var isAllWhitespace = true;\n\t      for (var j = lineStart; j < tokens.length; j++) {\n\t        isAllWhitespace =\n\t          (Hogan.tags[tokens[j].tag] < Hogan.tags['_v']) ||\n\t          (tokens[j].tag == '_t' && tokens[j].text.match(rIsWhitespace) === null);\n\t        if (!isAllWhitespace) {\n\t          return false;\n\t        }\n\t      }\n\t\n\t      return isAllWhitespace;\n\t    }\n\t\n\t    function filterLine(haveSeenTag, noNewLine) {\n\t      addBuf();\n\t\n\t      if (haveSeenTag && lineIsWhitespace()) {\n\t        for (var j = lineStart, next; j < tokens.length; j++) {\n\t          if (tokens[j].text) {\n\t            if ((next = tokens[j+1]) && next.tag == '>') {\n\t              // set indent to token value\n\t              next.indent = tokens[j].text.toString()\n\t            }\n\t            tokens.splice(j, 1);\n\t          }\n\t        }\n\t      } else if (!noNewLine) {\n\t        tokens.push({tag:'\\n'});\n\t      }\n\t\n\t      seenTag = false;\n\t      lineStart = tokens.length;\n\t    }\n\t\n\t    function changeDelimiters(text, index) {\n\t      var close = '=' + ctag,\n\t          closeIndex = text.indexOf(close, index),\n\t          delimiters = trim(\n\t            text.substring(text.indexOf('=', index) + 1, closeIndex)\n\t          ).split(' ');\n\t\n\t      otag = delimiters[0];\n\t      ctag = delimiters[delimiters.length - 1];\n\t\n\t      return closeIndex + close.length - 1;\n\t    }\n\t\n\t    if (delimiters) {\n\t      delimiters = delimiters.split(' ');\n\t      otag = delimiters[0];\n\t      ctag = delimiters[1];\n\t    }\n\t\n\t    for (i = 0; i < len; i++) {\n\t      if (state == IN_TEXT) {\n\t        if (tagChange(otag, text, i)) {\n\t          --i;\n\t          addBuf();\n\t          state = IN_TAG_TYPE;\n\t        } else {\n\t          if (text.charAt(i) == '\\n') {\n\t            filterLine(seenTag);\n\t          } else {\n\t            buf += text.charAt(i);\n\t          }\n\t        }\n\t      } else if (state == IN_TAG_TYPE) {\n\t        i += otag.length - 1;\n\t        tag = Hogan.tags[text.charAt(i + 1)];\n\t        tagType = tag ? text.charAt(i + 1) : '_v';\n\t        if (tagType == '=') {\n\t          i = changeDelimiters(text, i);\n\t          state = IN_TEXT;\n\t        } else {\n\t          if (tag) {\n\t            i++;\n\t          }\n\t          state = IN_TAG;\n\t        }\n\t        seenTag = i;\n\t      } else {\n\t        if (tagChange(ctag, text, i)) {\n\t          tokens.push({tag: tagType, n: trim(buf), otag: otag, ctag: ctag,\n\t                       i: (tagType == '/') ? seenTag - otag.length : i + ctag.length});\n\t          buf = '';\n\t          i += ctag.length - 1;\n\t          state = IN_TEXT;\n\t          if (tagType == '{') {\n\t            if (ctag == '}}') {\n\t              i++;\n\t            } else {\n\t              cleanTripleStache(tokens[tokens.length - 1]);\n\t            }\n\t          }\n\t        } else {\n\t          buf += text.charAt(i);\n\t        }\n\t      }\n\t    }\n\t\n\t    filterLine(seenTag, true);\n\t\n\t    return tokens;\n\t  }\n\t\n\t  function cleanTripleStache(token) {\n\t    if (token.n.substr(token.n.length - 1) === '}') {\n\t      token.n = token.n.substring(0, token.n.length - 1);\n\t    }\n\t  }\n\t\n\t  function trim(s) {\n\t    if (s.trim) {\n\t      return s.trim();\n\t    }\n\t\n\t    return s.replace(/^\\s*|\\s*$/g, '');\n\t  }\n\t\n\t  function tagChange(tag, text, index) {\n\t    if (text.charAt(index) != tag.charAt(0)) {\n\t      return false;\n\t    }\n\t\n\t    for (var i = 1, l = tag.length; i < l; i++) {\n\t      if (text.charAt(index + i) != tag.charAt(i)) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    return true;\n\t  }\n\t\n\t  // the tags allowed inside super templates\n\t  var allowedInSuper = {'_t': true, '\\n': true, '$': true, '/': true};\n\t\n\t  function buildTree(tokens, kind, stack, customTags) {\n\t    var instructions = [],\n\t        opener = null,\n\t        tail = null,\n\t        token = null;\n\t\n\t    tail = stack[stack.length - 1];\n\t\n\t    while (tokens.length > 0) {\n\t      token = tokens.shift();\n\t\n\t      if (tail && tail.tag == '<' && !(token.tag in allowedInSuper)) {\n\t        throw new Error('Illegal content in < super tag.');\n\t      }\n\t\n\t      if (Hogan.tags[token.tag] <= Hogan.tags['$'] || isOpener(token, customTags)) {\n\t        stack.push(token);\n\t        token.nodes = buildTree(tokens, token.tag, stack, customTags);\n\t      } else if (token.tag == '/') {\n\t        if (stack.length === 0) {\n\t          throw new Error('Closing tag without opener: /' + token.n);\n\t        }\n\t        opener = stack.pop();\n\t        if (token.n != opener.n && !isCloser(token.n, opener.n, customTags)) {\n\t          throw new Error('Nesting error: ' + opener.n + ' vs. ' + token.n);\n\t        }\n\t        opener.end = token.i;\n\t        return instructions;\n\t      } else if (token.tag == '\\n') {\n\t        token.last = (tokens.length == 0) || (tokens[0].tag == '\\n');\n\t      }\n\t\n\t      instructions.push(token);\n\t    }\n\t\n\t    if (stack.length > 0) {\n\t      throw new Error('missing closing tag: ' + stack.pop().n);\n\t    }\n\t\n\t    return instructions;\n\t  }\n\t\n\t  function isOpener(token, tags) {\n\t    for (var i = 0, l = tags.length; i < l; i++) {\n\t      if (tags[i].o == token.n) {\n\t        token.tag = '#';\n\t        return true;\n\t      }\n\t    }\n\t  }\n\t\n\t  function isCloser(close, open, tags) {\n\t    for (var i = 0, l = tags.length; i < l; i++) {\n\t      if (tags[i].c == close && tags[i].o == open) {\n\t        return true;\n\t      }\n\t    }\n\t  }\n\t\n\t  function stringifySubstitutions(obj) {\n\t    var items = [];\n\t    for (var key in obj) {\n\t      items.push('\"' + esc(key) + '\": function(c,p,t,i) {' + obj[key] + '}');\n\t    }\n\t    return \"{ \" + items.join(\",\") + \" }\";\n\t  }\n\t\n\t  function stringifyPartials(codeObj) {\n\t    var partials = [];\n\t    for (var key in codeObj.partials) {\n\t      partials.push('\"' + esc(key) + '\":{name:\"' + esc(codeObj.partials[key].name) + '\", ' + stringifyPartials(codeObj.partials[key]) + \"}\");\n\t    }\n\t    return \"partials: {\" + partials.join(\",\") + \"}, subs: \" + stringifySubstitutions(codeObj.subs);\n\t  }\n\t\n\t  Hogan.stringify = function(codeObj, text, options) {\n\t    return \"{code: function (c,p,i) { \" + Hogan.wrapMain(codeObj.code) + \" },\" + stringifyPartials(codeObj) +  \"}\";\n\t  }\n\t\n\t  var serialNo = 0;\n\t  Hogan.generate = function(tree, text, options) {\n\t    serialNo = 0;\n\t    var context = { code: '', subs: {}, partials: {} };\n\t    Hogan.walk(tree, context);\n\t\n\t    if (options.asString) {\n\t      return this.stringify(context, text, options);\n\t    }\n\t\n\t    return this.makeTemplate(context, text, options);\n\t  }\n\t\n\t  Hogan.wrapMain = function(code) {\n\t    return 'var t=this;t.b(i=i||\"\");' + code + 'return t.fl();';\n\t  }\n\t\n\t  Hogan.template = Hogan.Template;\n\t\n\t  Hogan.makeTemplate = function(codeObj, text, options) {\n\t    var template = this.makePartials(codeObj);\n\t    template.code = new Function('c', 'p', 'i', this.wrapMain(codeObj.code));\n\t    return new this.template(template, text, this, options);\n\t  }\n\t\n\t  Hogan.makePartials = function(codeObj) {\n\t    var key, template = {subs: {}, partials: codeObj.partials, name: codeObj.name};\n\t    for (key in template.partials) {\n\t      template.partials[key] = this.makePartials(template.partials[key]);\n\t    }\n\t    for (key in codeObj.subs) {\n\t      template.subs[key] = new Function('c', 'p', 't', 'i', codeObj.subs[key]);\n\t    }\n\t    return template;\n\t  }\n\t\n\t  function esc(s) {\n\t    return s.replace(rSlash, '\\\\\\\\')\n\t            .replace(rQuot, '\\\\\\\"')\n\t            .replace(rNewline, '\\\\n')\n\t            .replace(rCr, '\\\\r')\n\t            .replace(rLineSep, '\\\\u2028')\n\t            .replace(rParagraphSep, '\\\\u2029');\n\t  }\n\t\n\t  function chooseMethod(s) {\n\t    return (~s.indexOf('.')) ? 'd' : 'f';\n\t  }\n\t\n\t  function createPartial(node, context) {\n\t    var prefix = \"<\" + (context.prefix || \"\");\n\t    var sym = prefix + node.n + serialNo++;\n\t    context.partials[sym] = {name: node.n, partials: {}};\n\t    context.code += 't.b(t.rp(\"' +  esc(sym) + '\",c,p,\"' + (node.indent || '') + '\"));';\n\t    return sym;\n\t  }\n\t\n\t  Hogan.codegen = {\n\t    '#': function(node, context) {\n\t      context.code += 'if(t.s(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,1),' +\n\t                      'c,p,0,' + node.i + ',' + node.end + ',\"' + node.otag + \" \" + node.ctag + '\")){' +\n\t                      't.rs(c,p,' + 'function(c,p,t){';\n\t      Hogan.walk(node.nodes, context);\n\t      context.code += '});c.pop();}';\n\t    },\n\t\n\t    '^': function(node, context) {\n\t      context.code += 'if(!t.s(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,1),c,p,1,0,0,\"\")){';\n\t      Hogan.walk(node.nodes, context);\n\t      context.code += '};';\n\t    },\n\t\n\t    '>': createPartial,\n\t    '<': function(node, context) {\n\t      var ctx = {partials: {}, code: '', subs: {}, inPartial: true};\n\t      Hogan.walk(node.nodes, ctx);\n\t      var template = context.partials[createPartial(node, context)];\n\t      template.subs = ctx.subs;\n\t      template.partials = ctx.partials;\n\t    },\n\t\n\t    '$': function(node, context) {\n\t      var ctx = {subs: {}, code: '', partials: context.partials, prefix: node.n};\n\t      Hogan.walk(node.nodes, ctx);\n\t      context.subs[node.n] = ctx.code;\n\t      if (!context.inPartial) {\n\t        context.code += 't.sub(\"' + esc(node.n) + '\",c,p,i);';\n\t      }\n\t    },\n\t\n\t    '\\n': function(node, context) {\n\t      context.code += write('\"\\\\n\"' + (node.last ? '' : ' + i'));\n\t    },\n\t\n\t    '_v': function(node, context) {\n\t      context.code += 't.b(t.v(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,0)));';\n\t    },\n\t\n\t    '_t': function(node, context) {\n\t      context.code += write('\"' + esc(node.text) + '\"');\n\t    },\n\t\n\t    '{': tripleStache,\n\t\n\t    '&': tripleStache\n\t  }\n\t\n\t  function tripleStache(node, context) {\n\t    context.code += 't.b(t.t(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,0)));';\n\t  }\n\t\n\t  function write(s) {\n\t    return 't.b(' + s + ');';\n\t  }\n\t\n\t  Hogan.walk = function(nodelist, context) {\n\t    var func;\n\t    for (var i = 0, l = nodelist.length; i < l; i++) {\n\t      func = Hogan.codegen[nodelist[i].tag];\n\t      func && func(nodelist[i], context);\n\t    }\n\t    return context;\n\t  }\n\t\n\t  Hogan.parse = function(tokens, text, options) {\n\t    options = options || {};\n\t    return buildTree(tokens, '', [], options.sectionTags || []);\n\t  }\n\t\n\t  Hogan.cache = {};\n\t\n\t  Hogan.cacheKey = function(text, options) {\n\t    return [text, !!options.asString, !!options.disableLambda, options.delimiters, !!options.modelGet].join('||');\n\t  }\n\t\n\t  Hogan.compile = function(text, options) {\n\t    options = options || {};\n\t    var key = Hogan.cacheKey(text, options);\n\t    var template = this.cache[key];\n\t\n\t    if (template) {\n\t      var partials = template.partials;\n\t      for (var name in partials) {\n\t        delete partials[name].instance;\n\t      }\n\t      return template;\n\t    }\n\t\n\t    template = this.generate(this.parse(this.scan(text, options.delimiters), text, options), text, options);\n\t    return this.cache[key] = template;\n\t  }\n\t})( true ? exports : Hogan);\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t *  Copyright 2011 Twitter, Inc.\n\t *  Licensed under the Apache License, Version 2.0 (the \"License\");\n\t *  you may not use this file except in compliance with the License.\n\t *  You may obtain a copy of the License at\n\t *\n\t *  http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t *  Unless required by applicable law or agreed to in writing, software\n\t *  distributed under the License is distributed on an \"AS IS\" BASIS,\n\t *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t *  See the License for the specific language governing permissions and\n\t *  limitations under the License.\n\t */\n\t\n\tvar Hogan = {};\n\t\n\t(function (Hogan) {\n\t  Hogan.Template = function (codeObj, text, compiler, options) {\n\t    codeObj = codeObj || {};\n\t    this.r = codeObj.code || this.r;\n\t    this.c = compiler;\n\t    this.options = options || {};\n\t    this.text = text || '';\n\t    this.partials = codeObj.partials || {};\n\t    this.subs = codeObj.subs || {};\n\t    this.buf = '';\n\t  }\n\t\n\t  Hogan.Template.prototype = {\n\t    // render: replaced by generated code.\n\t    r: function (context, partials, indent) { return ''; },\n\t\n\t    // variable escaping\n\t    v: hoganEscape,\n\t\n\t    // triple stache\n\t    t: coerceToString,\n\t\n\t    render: function render(context, partials, indent) {\n\t      return this.ri([context], partials || {}, indent);\n\t    },\n\t\n\t    // render internal -- a hook for overrides that catches partials too\n\t    ri: function (context, partials, indent) {\n\t      return this.r(context, partials, indent);\n\t    },\n\t\n\t    // ensurePartial\n\t    ep: function(symbol, partials) {\n\t      var partial = this.partials[symbol];\n\t\n\t      // check to see that if we've instantiated this partial before\n\t      var template = partials[partial.name];\n\t      if (partial.instance && partial.base == template) {\n\t        return partial.instance;\n\t      }\n\t\n\t      if (typeof template == 'string') {\n\t        if (!this.c) {\n\t          throw new Error(\"No compiler available.\");\n\t        }\n\t        template = this.c.compile(template, this.options);\n\t      }\n\t\n\t      if (!template) {\n\t        return null;\n\t      }\n\t\n\t      // We use this to check whether the partials dictionary has changed\n\t      this.partials[symbol].base = template;\n\t\n\t      if (partial.subs) {\n\t        // Make sure we consider parent template now\n\t        if (!partials.stackText) partials.stackText = {};\n\t        for (key in partial.subs) {\n\t          if (!partials.stackText[key]) {\n\t            partials.stackText[key] = (this.activeSub !== undefined && partials.stackText[this.activeSub]) ? partials.stackText[this.activeSub] : this.text;\n\t          }\n\t        }\n\t        template = createSpecializedPartial(template, partial.subs, partial.partials,\n\t          this.stackSubs, this.stackPartials, partials.stackText);\n\t      }\n\t      this.partials[symbol].instance = template;\n\t\n\t      return template;\n\t    },\n\t\n\t    // tries to find a partial in the current scope and render it\n\t    rp: function(symbol, context, partials, indent) {\n\t      var partial = this.ep(symbol, partials);\n\t      if (!partial) {\n\t        return '';\n\t      }\n\t\n\t      return partial.ri(context, partials, indent);\n\t    },\n\t\n\t    // render a section\n\t    rs: function(context, partials, section) {\n\t      var tail = context[context.length - 1];\n\t\n\t      if (!isArray(tail)) {\n\t        section(context, partials, this);\n\t        return;\n\t      }\n\t\n\t      for (var i = 0; i < tail.length; i++) {\n\t        context.push(tail[i]);\n\t        section(context, partials, this);\n\t        context.pop();\n\t      }\n\t    },\n\t\n\t    // maybe start a section\n\t    s: function(val, ctx, partials, inverted, start, end, tags) {\n\t      var pass;\n\t\n\t      if (isArray(val) && val.length === 0) {\n\t        return false;\n\t      }\n\t\n\t      if (typeof val == 'function') {\n\t        val = this.ms(val, ctx, partials, inverted, start, end, tags);\n\t      }\n\t\n\t      pass = !!val;\n\t\n\t      if (!inverted && pass && ctx) {\n\t        ctx.push((typeof val == 'object') ? val : ctx[ctx.length - 1]);\n\t      }\n\t\n\t      return pass;\n\t    },\n\t\n\t    // find values with dotted names\n\t    d: function(key, ctx, partials, returnFound) {\n\t      var found,\n\t          names = key.split('.'),\n\t          val = this.f(names[0], ctx, partials, returnFound),\n\t          doModelGet = this.options.modelGet,\n\t          cx = null;\n\t\n\t      if (key === '.' && isArray(ctx[ctx.length - 2])) {\n\t        val = ctx[ctx.length - 1];\n\t      } else {\n\t        for (var i = 1; i < names.length; i++) {\n\t          found = findInScope(names[i], val, doModelGet);\n\t          if (found !== undefined) {\n\t            cx = val;\n\t            val = found;\n\t          } else {\n\t            val = '';\n\t          }\n\t        }\n\t      }\n\t\n\t      if (returnFound && !val) {\n\t        return false;\n\t      }\n\t\n\t      if (!returnFound && typeof val == 'function') {\n\t        ctx.push(cx);\n\t        val = this.mv(val, ctx, partials);\n\t        ctx.pop();\n\t      }\n\t\n\t      return val;\n\t    },\n\t\n\t    // find values with normal names\n\t    f: function(key, ctx, partials, returnFound) {\n\t      var val = false,\n\t          v = null,\n\t          found = false,\n\t          doModelGet = this.options.modelGet;\n\t\n\t      for (var i = ctx.length - 1; i >= 0; i--) {\n\t        v = ctx[i];\n\t        val = findInScope(key, v, doModelGet);\n\t        if (val !== undefined) {\n\t          found = true;\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (!found) {\n\t        return (returnFound) ? false : \"\";\n\t      }\n\t\n\t      if (!returnFound && typeof val == 'function') {\n\t        val = this.mv(val, ctx, partials);\n\t      }\n\t\n\t      return val;\n\t    },\n\t\n\t    // higher order templates\n\t    ls: function(func, cx, partials, text, tags) {\n\t      var oldTags = this.options.delimiters;\n\t\n\t      this.options.delimiters = tags;\n\t      this.b(this.ct(coerceToString(func.call(cx, text)), cx, partials));\n\t      this.options.delimiters = oldTags;\n\t\n\t      return false;\n\t    },\n\t\n\t    // compile text\n\t    ct: function(text, cx, partials) {\n\t      if (this.options.disableLambda) {\n\t        throw new Error('Lambda features disabled.');\n\t      }\n\t      return this.c.compile(text, this.options).render(cx, partials);\n\t    },\n\t\n\t    // template result buffering\n\t    b: function(s) { this.buf += s; },\n\t\n\t    fl: function() { var r = this.buf; this.buf = ''; return r; },\n\t\n\t    // method replace section\n\t    ms: function(func, ctx, partials, inverted, start, end, tags) {\n\t      var textSource,\n\t          cx = ctx[ctx.length - 1],\n\t          result = func.call(cx);\n\t\n\t      if (typeof result == 'function') {\n\t        if (inverted) {\n\t          return true;\n\t        } else {\n\t          textSource = (this.activeSub && this.subsText && this.subsText[this.activeSub]) ? this.subsText[this.activeSub] : this.text;\n\t          return this.ls(result, cx, partials, textSource.substring(start, end), tags);\n\t        }\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    // method replace variable\n\t    mv: function(func, ctx, partials) {\n\t      var cx = ctx[ctx.length - 1];\n\t      var result = func.call(cx);\n\t\n\t      if (typeof result == 'function') {\n\t        return this.ct(coerceToString(result.call(cx)), cx, partials);\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    sub: function(name, context, partials, indent) {\n\t      var f = this.subs[name];\n\t      if (f) {\n\t        this.activeSub = name;\n\t        f(context, partials, this, indent);\n\t        this.activeSub = false;\n\t      }\n\t    }\n\t\n\t  };\n\t\n\t  //Find a key in an object\n\t  function findInScope(key, scope, doModelGet) {\n\t    var val;\n\t\n\t    if (scope && typeof scope == 'object') {\n\t\n\t      if (scope[key] !== undefined) {\n\t        val = scope[key];\n\t\n\t      // try lookup with get for backbone or similar model data\n\t      } else if (doModelGet && scope.get && typeof scope.get == 'function') {\n\t        val = scope.get(key);\n\t      }\n\t    }\n\t\n\t    return val;\n\t  }\n\t\n\t  function createSpecializedPartial(instance, subs, partials, stackSubs, stackPartials, stackText) {\n\t    function PartialTemplate() {};\n\t    PartialTemplate.prototype = instance;\n\t    function Substitutions() {};\n\t    Substitutions.prototype = instance.subs;\n\t    var key;\n\t    var partial = new PartialTemplate();\n\t    partial.subs = new Substitutions();\n\t    partial.subsText = {};  //hehe. substext.\n\t    partial.buf = '';\n\t\n\t    stackSubs = stackSubs || {};\n\t    partial.stackSubs = stackSubs;\n\t    partial.subsText = stackText;\n\t    for (key in subs) {\n\t      if (!stackSubs[key]) stackSubs[key] = subs[key];\n\t    }\n\t    for (key in stackSubs) {\n\t      partial.subs[key] = stackSubs[key];\n\t    }\n\t\n\t    stackPartials = stackPartials || {};\n\t    partial.stackPartials = stackPartials;\n\t    for (key in partials) {\n\t      if (!stackPartials[key]) stackPartials[key] = partials[key];\n\t    }\n\t    for (key in stackPartials) {\n\t      partial.partials[key] = stackPartials[key];\n\t    }\n\t\n\t    return partial;\n\t  }\n\t\n\t  var rAmp = /&/g,\n\t      rLt = /</g,\n\t      rGt = />/g,\n\t      rApos = /\\'/g,\n\t      rQuot = /\\\"/g,\n\t      hChars = /[&<>\\\"\\']/;\n\t\n\t  function coerceToString(val) {\n\t    return String((val === null || val === undefined) ? '' : val);\n\t  }\n\t\n\t  function hoganEscape(str) {\n\t    str = coerceToString(str);\n\t    return hChars.test(str) ?\n\t      str\n\t        .replace(rAmp, '&amp;')\n\t        .replace(rLt, '&lt;')\n\t        .replace(rGt, '&gt;')\n\t        .replace(rApos, '&#39;')\n\t        .replace(rQuot, '&quot;') :\n\t      str;\n\t  }\n\t\n\t  var isArray = Array.isArray || function(a) {\n\t    return Object.prototype.toString.call(a) === '[object Array]';\n\t  };\n\t\n\t})( true ? exports : Hogan);\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar H = __webpack_require__(1);\n\tmodule.exports = function() { var T = new H.Template({code: function (c,p,i) { var t=this;t.b(i=i||\"\");t.b(\"<li title=\\\"\");t.b(t.v(t.f(\"title\",c,p,0)));t.b(\"\\\" class=\\\"ext-cards-card\\\">\");t.b(\"\\n\" + i);t.b(\"\t<div class=\\\"ext-cards-card-thumb\\\" \");if(t.s(t.f(\"hasThumbnail\",c,p,1),c,p,0,102,156,\"{{ }}\")){t.rs(c,p,function(c,p,t){t.b(\"style=\\\"background-image: url( '\");t.b(t.v(t.f(\"thumbnailUrl\",c,p,0)));t.b(\"' );\\\"\");});c.pop();}t.b(\"></div>\");t.b(\"\\n\" + i);t.b(\"\t<a href=\\\"\");t.b(t.v(t.f(\"url\",c,p,0)));t.b(\"\\\" aria-hidden=\\\"true\\\" tabindex=\\\"-1\\\"></a>\");t.b(\"\\n\" + i);t.b(\"\t<div class=\\\"ext-cards-card-detail\\\">\");t.b(\"\\n\" + i);t.b(\"\t\t<h3><a href=\\\"\");t.b(t.v(t.f(\"url\",c,p,0)));t.b(\"\\\">\");t.b(t.v(t.f(\"title\",c,p,0)));t.b(\"</a></h3>\");t.b(\"\\n\" + i);t.b(\"\t\t\");if(t.s(t.f(\"extract\",c,p,1),c,p,0,342,393,\"{{ }}\")){t.rs(c,p,function(c,p,t){t.b(\"<p class=\\\"ext-cards-card-extract\\\">\");t.b(t.v(t.f(\"extract\",c,p,0)));t.b(\"</p>\");});c.pop();}t.b(\"\\n\" + i);t.b(\"\t</div>\");t.b(\"\\n\" + i);t.b(\"</li>\");t.b(\"\\n\");return t.fl(); },partials: {}, subs: {  }}, \"<li title=\\\"{{ title }}\\\" class=\\\"ext-cards-card\\\">\\n\\t<div class=\\\"ext-cards-card-thumb\\\" {{# hasThumbnail }}style=\\\"background-image: url( '{{ thumbnailUrl }}' );\\\"{{/ hasThumbnail }}></div>\\n\\t<a href=\\\"{{ url }}\\\" aria-hidden=\\\"true\\\" tabindex=\\\"-1\\\"></a>\\n\\t<div class=\\\"ext-cards-card-detail\\\">\\n\\t\\t<h3><a href=\\\"{{ url }}\\\">{{ title }}</a></h3>\\n\\t\\t{{# extract }}<p class=\\\"ext-cards-card-extract\\\">{{ extract }}</p>{{/ extract }}\\n\\t</div>\\n</li>\\n\", H);return T; }();\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar H = __webpack_require__(1);\n\tmodule.exports = function() { var T = new H.Template({code: function (c,p,i) { var t=this;t.b(i=i||\"\");t.b(\"<ul class=\\\"ext-cards-card-list\\\">\");t.b(\"\\n\" + i);t.b(\"</ul>\");t.b(\"\\n\");return t.fl(); },partials: {}, subs: {  }}, \"<ul class=\\\"ext-cards-card-list\\\">\\n</ul>\\n\", H);return T; }();\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Default thumbnail width in pixels: 80px\n\t * @readonly\n\t */\n\tvar THUMB_WIDTH = 80,\n\t\tCardModel = __webpack_require__( 3 ),\n\t\tCardView = __webpack_require__( 4 ),\n\t\tCardListView = __webpack_require__( 2 );\n\t\n\t/**\n\t * Gateway for interacting with an API\n\t * It can be used to retrieve information about article(s). In the future\n\t * it can also be used to update that information in the server.\n\t *\n\t * @class mw.cards.CardsGateway\n\t * @param {Object} options\n\t * @param {mw.Api} options.api an Api to use.\n\t */\n\tfunction CardsGateway( options ) {\n\t\tthis.api = options.api;\n\t}\n\tOO.initClass( CardsGateway );\n\t\n\t/**\n\t * Fetch information about articleTitles from the API\n\t * How to use:\n\t *\n\t *     @example\n\t *     var gateway = new mw.cards.CardsGateway( { api: new mw.Api() } );\n\t *\n\t *     // '1' and '2' are page titles, while 200 is the desired thumbnail width\n\t *     gateway.getCards( ['1', '2'], 200 ).done( function( cards ) {\n\t *         $( '#bodyContent' ).append( cards.$el );\n\t *     } );\n\t *\n\t * @param {String[]} articleTitles array of article titles\n\t * @param {Number} [thumbWidth] Thumbnail width in pixels. Defaults to\n\t *  {@link THUMB_WIDTH}\n\t * @return {jQuery.Deferred} the result resolves with a\n\t *  {@link mw.cards.CardListView card list}\n\t */\n\tCardsGateway.prototype.getCards = function ( articleTitles, thumbWidth ) {\n\t\tvar article,\n\t\t\tcardViews = [],\n\t\t\tresult = $.Deferred();\n\t\n\t\tif ( !articleTitles.length ) {\n\t\t\tresult.resolve( new CardListView( cardViews ) );\n\t\t\treturn result;\n\t\t}\n\t\n\t\tthis.api.get( {\n\t\t\taction: 'query',\n\t\t\tprop: 'extracts|pageimages',\n\t\t\texplaintext: true,\n\t\t\texlimit: articleTitles.length,\n\t\t\texintro: true,\n\t\t\texsentences: 1,\n\t\t\tpithumbsize: thumbWidth || THUMB_WIDTH,\n\t\t\ttitles: articleTitles.join( '|' ),\n\t\t\tcontinue: '',\n\t\t\tformatversion: 2\n\t\t} ).done( function ( data ) {\n\t\t\tif ( data.query && data.query.pages ) {\n\t\t\t\tcardViews = $.map( data.query.pages, function ( page ) {\n\t\t\t\t\tarticle = {\n\t\t\t\t\t\ttitle: page.title,\n\t\t\t\t\t\turl: mw.util.getUrl( page.title ),\n\t\t\t\t\t\thasThumbnail: false\n\t\t\t\t\t};\n\t\n\t\t\t\t\tif ( page.thumbnail && isValidThumbnail( page.thumbnail ) ) {\n\t\t\t\t\t\tarticle.hasThumbnail = true;\n\t\t\t\t\t\tarticle.thumbnailUrl = page.thumbnail.source;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( page.extract ) {\n\t\t\t\t\t\tarticle.extract = page.extract;\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn new CardView( new CardModel( article ) );\n\t\t\t\t} );\n\t\t\t}\n\t\t\tresult.resolve( new CardListView( cardViews ) );\n\t\t} ).fail( function () {\n\t\t\tresult.resolve( new CardListView( cardViews ) );\n\t\t} );\n\t\n\t\treturn result;\n\t};\n\t\n\t/**\n\t * @ignore\n\t */\n\tfunction isValidThumbnail( thumb ) {\n\t\treturn thumb.source.substr( 0, 7 ) === 'http://' || thumb.source.substr( 0, 8 ) === 'https://';\n\t}\n\t\n\tmodule.exports = CardsGateway;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*! https://mths.be/cssescape v1.1.0 by @mathias | MIT license */\n\t;(function(root) {\n\t\n\t\tif (!root.CSS) {\n\t\t\troot.CSS = {};\n\t\t}\n\t\n\t\tvar CSS = root.CSS;\n\t\n\t\tvar InvalidCharacterError = function(message) {\n\t\t\tthis.message = message;\n\t\t};\n\t\tInvalidCharacterError.prototype = new Error;\n\t\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\t\n\t\tif (!CSS.escape) {\n\t\t\t// https://drafts.csswg.org/cssom/#serialize-an-identifier\n\t\t\tCSS.escape = function(value) {\n\t\t\t\tvar string = String(value);\n\t\t\t\tvar length = string.length;\n\t\t\t\tvar index = -1;\n\t\t\t\tvar codeUnit;\n\t\t\t\tvar result = '';\n\t\t\t\tvar firstCodeUnit = string.charCodeAt(0);\n\t\t\t\twhile (++index < length) {\n\t\t\t\t\tcodeUnit = string.charCodeAt(index);\n\t\t\t\t\t// Note: there’s no need to special-case astral symbols, surrogate\n\t\t\t\t\t// pairs, or lone surrogates.\n\t\n\t\t\t\t\t// If the character is NULL (U+0000), then throw an\n\t\t\t\t\t// `InvalidCharacterError` exception and terminate these steps.\n\t\t\t\t\tif (codeUnit == 0x0000) {\n\t\t\t\t\t\tthrow new InvalidCharacterError(\n\t\t\t\t\t\t\t'Invalid character: the input contains U+0000.'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (\n\t\t\t\t\t\t// If the character is in the range [\\1-\\1F] (U+0001 to U+001F) or is\n\t\t\t\t\t\t// U+007F, […]\n\t\t\t\t\t\t(codeUnit >= 0x0001 && codeUnit <= 0x001F) || codeUnit == 0x007F ||\n\t\t\t\t\t\t// If the character is the first character and is in the range [0-9]\n\t\t\t\t\t\t// (U+0030 to U+0039), […]\n\t\t\t\t\t\t(index == 0 && codeUnit >= 0x0030 && codeUnit <= 0x0039) ||\n\t\t\t\t\t\t// If the character is the second character and is in the range [0-9]\n\t\t\t\t\t\t// (U+0030 to U+0039) and the first character is a `-` (U+002D), […]\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tindex == 1 &&\n\t\t\t\t\t\t\tcodeUnit >= 0x0030 && codeUnit <= 0x0039 &&\n\t\t\t\t\t\t\tfirstCodeUnit == 0x002D\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\t// https://drafts.csswg.org/cssom/#escape-a-character-as-code-point\n\t\t\t\t\t\tresult += '\\\\' + codeUnit.toString(16) + ' ';\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (\n\t\t\t\t\t\t// If the character is the first character and is a `-` (U+002D), and\n\t\t\t\t\t\t// there is no second character, […]\n\t\t\t\t\t\tindex == 0 &&\n\t\t\t\t\t\tlength == 1 &&\n\t\t\t\t\t\tcodeUnit == 0x002D\n\t\t\t\t\t) {\n\t\t\t\t\t\tresult += '\\\\' + string.charAt(index);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If the character is not handled by one of the above rules and is\n\t\t\t\t\t// greater than or equal to U+0080, is `-` (U+002D) or `_` (U+005F), or\n\t\t\t\t\t// is in one of the ranges [0-9] (U+0030 to U+0039), [A-Z] (U+0041 to\n\t\t\t\t\t// U+005A), or [a-z] (U+0061 to U+007A), […]\n\t\t\t\t\tif (\n\t\t\t\t\t\tcodeUnit >= 0x0080 ||\n\t\t\t\t\t\tcodeUnit == 0x002D ||\n\t\t\t\t\t\tcodeUnit == 0x005F ||\n\t\t\t\t\t\tcodeUnit >= 0x0030 && codeUnit <= 0x0039 ||\n\t\t\t\t\t\tcodeUnit >= 0x0041 && codeUnit <= 0x005A ||\n\t\t\t\t\t\tcodeUnit >= 0x0061 && codeUnit <= 0x007A\n\t\t\t\t\t) {\n\t\t\t\t\t\t// the character itself\n\t\t\t\t\t\tresult += string.charAt(index);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Otherwise, the escaped character.\n\t\t\t\t\t// https://drafts.csswg.org/cssom/#escape-a-character\n\t\t\t\t\tresult += '\\\\' + string.charAt(index);\n\t\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\n\t}(typeof global != 'undefined' ? global : this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** cards.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/w/extensions/Cards/build\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b94fe4c75742347d4c8b\n **/","/**\n * @class mw.cards\n * @singleton\n */\nwindow.mw.cards = module.exports = {\n\tCardModel: require( './CardModel' ),\n\tCardView: require( './CardView' ),\n\tCardListView: require( './CardListView' ),\n\tCardsGateway: require( './CardsGateway' )\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/cards/index.js\n ** module id = 0\n ** module chunks = 0\n **/","/*\n *  Copyright 2011 Twitter, Inc.\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n// This file is for use with Node.js. See dist/ for browser files.\n\nvar Hogan = require('./compiler');\nHogan.Template = require('./template').Template;\nHogan.template = Hogan.Template;\nmodule.exports = Hogan;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/hogan.js/lib/hogan.js\n ** module id = 1\n ** module chunks = 0\n **/","/**\n * View that renders multiple {@link mw.cards.CardView cards}\n *\n * @class mw.cards.CardListView\n * @param {mw.cards.CardView[]} cardViews\n */\nfunction CardListView( cardViews ) {\n\tvar self = this;\n\n\t/**\n\t * @property {mw.cards.CardView[]|Array}\n\t */\n\tthis.cardViews = cardViews || [];\n\n\t/**\n\t * @property {jQuery}\n\t */\n\tthis.$el = $( this.template.render() );\n\n\t// We don't want to use template partials because we want to\n\t// preserve event handlers of each card view.\n\t$.each( this.cardViews, function ( i, cardView ) {\n\t\tself.$el.append( cardView.$el );\n\t} );\n}\nOO.initClass( CardListView );\n\n/**\n * @property {Object} compiled template\n */\nCardListView.prototype.template = require( './cards.hogan' );\n\nmodule.exports = CardListView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/cards/CardListView.js\n ** module id = 2\n ** module chunks = 0\n **/","/**\n * Model for an article\n * It is the single source of truth about a Card, which is a representation\n * of a wiki article. It emits a 'change' event when its attribute changes.\n * A View can listen to this event and update the UI accordingly.\n *\n * @class mw.cards.CardModel\n * @extends OO.EventEmitter\n * @param {Object} attributes article data, such as title, url, etc. about\n *  an article\n */\nfunction CardModel( attributes ) {\n\tCardModel.super.apply( this, arguments );\n\t/**\n\t * @property {Object} attributes of the model\n\t */\n\tthis.attributes = attributes;\n}\nOO.inheritClass( CardModel, OO.EventEmitter );\n\n/**\n * Set a model attribute.\n * Emits a 'change' event with the object whose key is the attribute\n * that's being updated and value is the value that's being set. The event\n * can also be silenced.\n *\n * @param {String} key attribute that's being set\n * @param {Mixed} value the value of the key param\n * @param {Boolean} [silent] whether to emit the 'change' event. By default\n *  the 'change' event will be emitted.\n */\nCardModel.prototype.set = function ( key, value, silent ) {\n\tvar event = {};\n\n\tthis.attributes[ key ] = value;\n\tif ( !silent ) {\n\t\tevent[ key ] = value;\n\t\tthis.emit( 'change', event );\n\t}\n};\n\n/**\n * Get the model attribute's value.\n *\n * @param key attribute that's being looked up\n * @returns {Mixed}\n */\nCardModel.prototype.get = function ( key ) {\n\treturn this.attributes[ key ];\n};\n\nmodule.exports = CardModel;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/cards/CardModel.js\n ** module id = 3\n ** module chunks = 0\n **/","require( './css.escape' );\n\n/**\n * Renders a Card model and updates when it does.\n *\n * @class mw.cards.CardView\n * @param {mw.cards.CardModel} model\n */\nfunction CardView( model ) {\n\t/**\n\t * @property {mw.cards.CardModel}\n\t */\n\tthis.model = model;\n\n\t// listen to model changes and re-render the view\n\tthis.model.on( 'change', this.render.bind( this ) );\n\n\t/**\n\t * @property {jQuery}\n\t */\n\tthis.$el = $( this._render() );\n}\nOO.initClass( CardView );\n\n/**\n * @property {Object} compiled template\n */\nCardView.prototype.template = require( './card.hogan' );\n\n/**\n * Replace the html of this.$el with a newly rendered html using the model\n * attributes.\n */\nCardView.prototype.render = function () {\n\tthis.$el.replaceWith( this._render() );\n};\n\n/**\n * Renders the template using the model attributes.\n *\n * @ignore\n */\nCardView.prototype._render = function () {\n\tvar attributes = $.extend( {}, this.model.attributes );\n\tattributes.thumbnailUrl = CSS.escape( attributes.thumbnailUrl );\n\n\treturn this.template.render( attributes );\n};\n\nmodule.exports = CardView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/cards/CardView.js\n ** module id = 4\n ** module chunks = 0\n **/","/*\n *  Copyright 2011 Twitter, Inc.\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n(function (Hogan) {\n  // Setup regex  assignments\n  // remove whitespace according to Mustache spec\n  var rIsWhitespace = /\\S/,\n      rQuot = /\\\"/g,\n      rNewline =  /\\n/g,\n      rCr = /\\r/g,\n      rSlash = /\\\\/g,\n      rLineSep = /\\u2028/,\n      rParagraphSep = /\\u2029/;\n\n  Hogan.tags = {\n    '#': 1, '^': 2, '<': 3, '$': 4,\n    '/': 5, '!': 6, '>': 7, '=': 8, '_v': 9,\n    '{': 10, '&': 11, '_t': 12\n  };\n\n  Hogan.scan = function scan(text, delimiters) {\n    var len = text.length,\n        IN_TEXT = 0,\n        IN_TAG_TYPE = 1,\n        IN_TAG = 2,\n        state = IN_TEXT,\n        tagType = null,\n        tag = null,\n        buf = '',\n        tokens = [],\n        seenTag = false,\n        i = 0,\n        lineStart = 0,\n        otag = '{{',\n        ctag = '}}';\n\n    function addBuf() {\n      if (buf.length > 0) {\n        tokens.push({tag: '_t', text: new String(buf)});\n        buf = '';\n      }\n    }\n\n    function lineIsWhitespace() {\n      var isAllWhitespace = true;\n      for (var j = lineStart; j < tokens.length; j++) {\n        isAllWhitespace =\n          (Hogan.tags[tokens[j].tag] < Hogan.tags['_v']) ||\n          (tokens[j].tag == '_t' && tokens[j].text.match(rIsWhitespace) === null);\n        if (!isAllWhitespace) {\n          return false;\n        }\n      }\n\n      return isAllWhitespace;\n    }\n\n    function filterLine(haveSeenTag, noNewLine) {\n      addBuf();\n\n      if (haveSeenTag && lineIsWhitespace()) {\n        for (var j = lineStart, next; j < tokens.length; j++) {\n          if (tokens[j].text) {\n            if ((next = tokens[j+1]) && next.tag == '>') {\n              // set indent to token value\n              next.indent = tokens[j].text.toString()\n            }\n            tokens.splice(j, 1);\n          }\n        }\n      } else if (!noNewLine) {\n        tokens.push({tag:'\\n'});\n      }\n\n      seenTag = false;\n      lineStart = tokens.length;\n    }\n\n    function changeDelimiters(text, index) {\n      var close = '=' + ctag,\n          closeIndex = text.indexOf(close, index),\n          delimiters = trim(\n            text.substring(text.indexOf('=', index) + 1, closeIndex)\n          ).split(' ');\n\n      otag = delimiters[0];\n      ctag = delimiters[delimiters.length - 1];\n\n      return closeIndex + close.length - 1;\n    }\n\n    if (delimiters) {\n      delimiters = delimiters.split(' ');\n      otag = delimiters[0];\n      ctag = delimiters[1];\n    }\n\n    for (i = 0; i < len; i++) {\n      if (state == IN_TEXT) {\n        if (tagChange(otag, text, i)) {\n          --i;\n          addBuf();\n          state = IN_TAG_TYPE;\n        } else {\n          if (text.charAt(i) == '\\n') {\n            filterLine(seenTag);\n          } else {\n            buf += text.charAt(i);\n          }\n        }\n      } else if (state == IN_TAG_TYPE) {\n        i += otag.length - 1;\n        tag = Hogan.tags[text.charAt(i + 1)];\n        tagType = tag ? text.charAt(i + 1) : '_v';\n        if (tagType == '=') {\n          i = changeDelimiters(text, i);\n          state = IN_TEXT;\n        } else {\n          if (tag) {\n            i++;\n          }\n          state = IN_TAG;\n        }\n        seenTag = i;\n      } else {\n        if (tagChange(ctag, text, i)) {\n          tokens.push({tag: tagType, n: trim(buf), otag: otag, ctag: ctag,\n                       i: (tagType == '/') ? seenTag - otag.length : i + ctag.length});\n          buf = '';\n          i += ctag.length - 1;\n          state = IN_TEXT;\n          if (tagType == '{') {\n            if (ctag == '}}') {\n              i++;\n            } else {\n              cleanTripleStache(tokens[tokens.length - 1]);\n            }\n          }\n        } else {\n          buf += text.charAt(i);\n        }\n      }\n    }\n\n    filterLine(seenTag, true);\n\n    return tokens;\n  }\n\n  function cleanTripleStache(token) {\n    if (token.n.substr(token.n.length - 1) === '}') {\n      token.n = token.n.substring(0, token.n.length - 1);\n    }\n  }\n\n  function trim(s) {\n    if (s.trim) {\n      return s.trim();\n    }\n\n    return s.replace(/^\\s*|\\s*$/g, '');\n  }\n\n  function tagChange(tag, text, index) {\n    if (text.charAt(index) != tag.charAt(0)) {\n      return false;\n    }\n\n    for (var i = 1, l = tag.length; i < l; i++) {\n      if (text.charAt(index + i) != tag.charAt(i)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  // the tags allowed inside super templates\n  var allowedInSuper = {'_t': true, '\\n': true, '$': true, '/': true};\n\n  function buildTree(tokens, kind, stack, customTags) {\n    var instructions = [],\n        opener = null,\n        tail = null,\n        token = null;\n\n    tail = stack[stack.length - 1];\n\n    while (tokens.length > 0) {\n      token = tokens.shift();\n\n      if (tail && tail.tag == '<' && !(token.tag in allowedInSuper)) {\n        throw new Error('Illegal content in < super tag.');\n      }\n\n      if (Hogan.tags[token.tag] <= Hogan.tags['$'] || isOpener(token, customTags)) {\n        stack.push(token);\n        token.nodes = buildTree(tokens, token.tag, stack, customTags);\n      } else if (token.tag == '/') {\n        if (stack.length === 0) {\n          throw new Error('Closing tag without opener: /' + token.n);\n        }\n        opener = stack.pop();\n        if (token.n != opener.n && !isCloser(token.n, opener.n, customTags)) {\n          throw new Error('Nesting error: ' + opener.n + ' vs. ' + token.n);\n        }\n        opener.end = token.i;\n        return instructions;\n      } else if (token.tag == '\\n') {\n        token.last = (tokens.length == 0) || (tokens[0].tag == '\\n');\n      }\n\n      instructions.push(token);\n    }\n\n    if (stack.length > 0) {\n      throw new Error('missing closing tag: ' + stack.pop().n);\n    }\n\n    return instructions;\n  }\n\n  function isOpener(token, tags) {\n    for (var i = 0, l = tags.length; i < l; i++) {\n      if (tags[i].o == token.n) {\n        token.tag = '#';\n        return true;\n      }\n    }\n  }\n\n  function isCloser(close, open, tags) {\n    for (var i = 0, l = tags.length; i < l; i++) {\n      if (tags[i].c == close && tags[i].o == open) {\n        return true;\n      }\n    }\n  }\n\n  function stringifySubstitutions(obj) {\n    var items = [];\n    for (var key in obj) {\n      items.push('\"' + esc(key) + '\": function(c,p,t,i) {' + obj[key] + '}');\n    }\n    return \"{ \" + items.join(\",\") + \" }\";\n  }\n\n  function stringifyPartials(codeObj) {\n    var partials = [];\n    for (var key in codeObj.partials) {\n      partials.push('\"' + esc(key) + '\":{name:\"' + esc(codeObj.partials[key].name) + '\", ' + stringifyPartials(codeObj.partials[key]) + \"}\");\n    }\n    return \"partials: {\" + partials.join(\",\") + \"}, subs: \" + stringifySubstitutions(codeObj.subs);\n  }\n\n  Hogan.stringify = function(codeObj, text, options) {\n    return \"{code: function (c,p,i) { \" + Hogan.wrapMain(codeObj.code) + \" },\" + stringifyPartials(codeObj) +  \"}\";\n  }\n\n  var serialNo = 0;\n  Hogan.generate = function(tree, text, options) {\n    serialNo = 0;\n    var context = { code: '', subs: {}, partials: {} };\n    Hogan.walk(tree, context);\n\n    if (options.asString) {\n      return this.stringify(context, text, options);\n    }\n\n    return this.makeTemplate(context, text, options);\n  }\n\n  Hogan.wrapMain = function(code) {\n    return 'var t=this;t.b(i=i||\"\");' + code + 'return t.fl();';\n  }\n\n  Hogan.template = Hogan.Template;\n\n  Hogan.makeTemplate = function(codeObj, text, options) {\n    var template = this.makePartials(codeObj);\n    template.code = new Function('c', 'p', 'i', this.wrapMain(codeObj.code));\n    return new this.template(template, text, this, options);\n  }\n\n  Hogan.makePartials = function(codeObj) {\n    var key, template = {subs: {}, partials: codeObj.partials, name: codeObj.name};\n    for (key in template.partials) {\n      template.partials[key] = this.makePartials(template.partials[key]);\n    }\n    for (key in codeObj.subs) {\n      template.subs[key] = new Function('c', 'p', 't', 'i', codeObj.subs[key]);\n    }\n    return template;\n  }\n\n  function esc(s) {\n    return s.replace(rSlash, '\\\\\\\\')\n            .replace(rQuot, '\\\\\\\"')\n            .replace(rNewline, '\\\\n')\n            .replace(rCr, '\\\\r')\n            .replace(rLineSep, '\\\\u2028')\n            .replace(rParagraphSep, '\\\\u2029');\n  }\n\n  function chooseMethod(s) {\n    return (~s.indexOf('.')) ? 'd' : 'f';\n  }\n\n  function createPartial(node, context) {\n    var prefix = \"<\" + (context.prefix || \"\");\n    var sym = prefix + node.n + serialNo++;\n    context.partials[sym] = {name: node.n, partials: {}};\n    context.code += 't.b(t.rp(\"' +  esc(sym) + '\",c,p,\"' + (node.indent || '') + '\"));';\n    return sym;\n  }\n\n  Hogan.codegen = {\n    '#': function(node, context) {\n      context.code += 'if(t.s(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,1),' +\n                      'c,p,0,' + node.i + ',' + node.end + ',\"' + node.otag + \" \" + node.ctag + '\")){' +\n                      't.rs(c,p,' + 'function(c,p,t){';\n      Hogan.walk(node.nodes, context);\n      context.code += '});c.pop();}';\n    },\n\n    '^': function(node, context) {\n      context.code += 'if(!t.s(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,1),c,p,1,0,0,\"\")){';\n      Hogan.walk(node.nodes, context);\n      context.code += '};';\n    },\n\n    '>': createPartial,\n    '<': function(node, context) {\n      var ctx = {partials: {}, code: '', subs: {}, inPartial: true};\n      Hogan.walk(node.nodes, ctx);\n      var template = context.partials[createPartial(node, context)];\n      template.subs = ctx.subs;\n      template.partials = ctx.partials;\n    },\n\n    '$': function(node, context) {\n      var ctx = {subs: {}, code: '', partials: context.partials, prefix: node.n};\n      Hogan.walk(node.nodes, ctx);\n      context.subs[node.n] = ctx.code;\n      if (!context.inPartial) {\n        context.code += 't.sub(\"' + esc(node.n) + '\",c,p,i);';\n      }\n    },\n\n    '\\n': function(node, context) {\n      context.code += write('\"\\\\n\"' + (node.last ? '' : ' + i'));\n    },\n\n    '_v': function(node, context) {\n      context.code += 't.b(t.v(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,0)));';\n    },\n\n    '_t': function(node, context) {\n      context.code += write('\"' + esc(node.text) + '\"');\n    },\n\n    '{': tripleStache,\n\n    '&': tripleStache\n  }\n\n  function tripleStache(node, context) {\n    context.code += 't.b(t.t(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,0)));';\n  }\n\n  function write(s) {\n    return 't.b(' + s + ');';\n  }\n\n  Hogan.walk = function(nodelist, context) {\n    var func;\n    for (var i = 0, l = nodelist.length; i < l; i++) {\n      func = Hogan.codegen[nodelist[i].tag];\n      func && func(nodelist[i], context);\n    }\n    return context;\n  }\n\n  Hogan.parse = function(tokens, text, options) {\n    options = options || {};\n    return buildTree(tokens, '', [], options.sectionTags || []);\n  }\n\n  Hogan.cache = {};\n\n  Hogan.cacheKey = function(text, options) {\n    return [text, !!options.asString, !!options.disableLambda, options.delimiters, !!options.modelGet].join('||');\n  }\n\n  Hogan.compile = function(text, options) {\n    options = options || {};\n    var key = Hogan.cacheKey(text, options);\n    var template = this.cache[key];\n\n    if (template) {\n      var partials = template.partials;\n      for (var name in partials) {\n        delete partials[name].instance;\n      }\n      return template;\n    }\n\n    template = this.generate(this.parse(this.scan(text, options.delimiters), text, options), text, options);\n    return this.cache[key] = template;\n  }\n})(typeof exports !== 'undefined' ? exports : Hogan);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/hogan.js/lib/compiler.js\n ** module id = 5\n ** module chunks = 0\n **/","/*\n *  Copyright 2011 Twitter, Inc.\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nvar Hogan = {};\n\n(function (Hogan) {\n  Hogan.Template = function (codeObj, text, compiler, options) {\n    codeObj = codeObj || {};\n    this.r = codeObj.code || this.r;\n    this.c = compiler;\n    this.options = options || {};\n    this.text = text || '';\n    this.partials = codeObj.partials || {};\n    this.subs = codeObj.subs || {};\n    this.buf = '';\n  }\n\n  Hogan.Template.prototype = {\n    // render: replaced by generated code.\n    r: function (context, partials, indent) { return ''; },\n\n    // variable escaping\n    v: hoganEscape,\n\n    // triple stache\n    t: coerceToString,\n\n    render: function render(context, partials, indent) {\n      return this.ri([context], partials || {}, indent);\n    },\n\n    // render internal -- a hook for overrides that catches partials too\n    ri: function (context, partials, indent) {\n      return this.r(context, partials, indent);\n    },\n\n    // ensurePartial\n    ep: function(symbol, partials) {\n      var partial = this.partials[symbol];\n\n      // check to see that if we've instantiated this partial before\n      var template = partials[partial.name];\n      if (partial.instance && partial.base == template) {\n        return partial.instance;\n      }\n\n      if (typeof template == 'string') {\n        if (!this.c) {\n          throw new Error(\"No compiler available.\");\n        }\n        template = this.c.compile(template, this.options);\n      }\n\n      if (!template) {\n        return null;\n      }\n\n      // We use this to check whether the partials dictionary has changed\n      this.partials[symbol].base = template;\n\n      if (partial.subs) {\n        // Make sure we consider parent template now\n        if (!partials.stackText) partials.stackText = {};\n        for (key in partial.subs) {\n          if (!partials.stackText[key]) {\n            partials.stackText[key] = (this.activeSub !== undefined && partials.stackText[this.activeSub]) ? partials.stackText[this.activeSub] : this.text;\n          }\n        }\n        template = createSpecializedPartial(template, partial.subs, partial.partials,\n          this.stackSubs, this.stackPartials, partials.stackText);\n      }\n      this.partials[symbol].instance = template;\n\n      return template;\n    },\n\n    // tries to find a partial in the current scope and render it\n    rp: function(symbol, context, partials, indent) {\n      var partial = this.ep(symbol, partials);\n      if (!partial) {\n        return '';\n      }\n\n      return partial.ri(context, partials, indent);\n    },\n\n    // render a section\n    rs: function(context, partials, section) {\n      var tail = context[context.length - 1];\n\n      if (!isArray(tail)) {\n        section(context, partials, this);\n        return;\n      }\n\n      for (var i = 0; i < tail.length; i++) {\n        context.push(tail[i]);\n        section(context, partials, this);\n        context.pop();\n      }\n    },\n\n    // maybe start a section\n    s: function(val, ctx, partials, inverted, start, end, tags) {\n      var pass;\n\n      if (isArray(val) && val.length === 0) {\n        return false;\n      }\n\n      if (typeof val == 'function') {\n        val = this.ms(val, ctx, partials, inverted, start, end, tags);\n      }\n\n      pass = !!val;\n\n      if (!inverted && pass && ctx) {\n        ctx.push((typeof val == 'object') ? val : ctx[ctx.length - 1]);\n      }\n\n      return pass;\n    },\n\n    // find values with dotted names\n    d: function(key, ctx, partials, returnFound) {\n      var found,\n          names = key.split('.'),\n          val = this.f(names[0], ctx, partials, returnFound),\n          doModelGet = this.options.modelGet,\n          cx = null;\n\n      if (key === '.' && isArray(ctx[ctx.length - 2])) {\n        val = ctx[ctx.length - 1];\n      } else {\n        for (var i = 1; i < names.length; i++) {\n          found = findInScope(names[i], val, doModelGet);\n          if (found !== undefined) {\n            cx = val;\n            val = found;\n          } else {\n            val = '';\n          }\n        }\n      }\n\n      if (returnFound && !val) {\n        return false;\n      }\n\n      if (!returnFound && typeof val == 'function') {\n        ctx.push(cx);\n        val = this.mv(val, ctx, partials);\n        ctx.pop();\n      }\n\n      return val;\n    },\n\n    // find values with normal names\n    f: function(key, ctx, partials, returnFound) {\n      var val = false,\n          v = null,\n          found = false,\n          doModelGet = this.options.modelGet;\n\n      for (var i = ctx.length - 1; i >= 0; i--) {\n        v = ctx[i];\n        val = findInScope(key, v, doModelGet);\n        if (val !== undefined) {\n          found = true;\n          break;\n        }\n      }\n\n      if (!found) {\n        return (returnFound) ? false : \"\";\n      }\n\n      if (!returnFound && typeof val == 'function') {\n        val = this.mv(val, ctx, partials);\n      }\n\n      return val;\n    },\n\n    // higher order templates\n    ls: function(func, cx, partials, text, tags) {\n      var oldTags = this.options.delimiters;\n\n      this.options.delimiters = tags;\n      this.b(this.ct(coerceToString(func.call(cx, text)), cx, partials));\n      this.options.delimiters = oldTags;\n\n      return false;\n    },\n\n    // compile text\n    ct: function(text, cx, partials) {\n      if (this.options.disableLambda) {\n        throw new Error('Lambda features disabled.');\n      }\n      return this.c.compile(text, this.options).render(cx, partials);\n    },\n\n    // template result buffering\n    b: function(s) { this.buf += s; },\n\n    fl: function() { var r = this.buf; this.buf = ''; return r; },\n\n    // method replace section\n    ms: function(func, ctx, partials, inverted, start, end, tags) {\n      var textSource,\n          cx = ctx[ctx.length - 1],\n          result = func.call(cx);\n\n      if (typeof result == 'function') {\n        if (inverted) {\n          return true;\n        } else {\n          textSource = (this.activeSub && this.subsText && this.subsText[this.activeSub]) ? this.subsText[this.activeSub] : this.text;\n          return this.ls(result, cx, partials, textSource.substring(start, end), tags);\n        }\n      }\n\n      return result;\n    },\n\n    // method replace variable\n    mv: function(func, ctx, partials) {\n      var cx = ctx[ctx.length - 1];\n      var result = func.call(cx);\n\n      if (typeof result == 'function') {\n        return this.ct(coerceToString(result.call(cx)), cx, partials);\n      }\n\n      return result;\n    },\n\n    sub: function(name, context, partials, indent) {\n      var f = this.subs[name];\n      if (f) {\n        this.activeSub = name;\n        f(context, partials, this, indent);\n        this.activeSub = false;\n      }\n    }\n\n  };\n\n  //Find a key in an object\n  function findInScope(key, scope, doModelGet) {\n    var val;\n\n    if (scope && typeof scope == 'object') {\n\n      if (scope[key] !== undefined) {\n        val = scope[key];\n\n      // try lookup with get for backbone or similar model data\n      } else if (doModelGet && scope.get && typeof scope.get == 'function') {\n        val = scope.get(key);\n      }\n    }\n\n    return val;\n  }\n\n  function createSpecializedPartial(instance, subs, partials, stackSubs, stackPartials, stackText) {\n    function PartialTemplate() {};\n    PartialTemplate.prototype = instance;\n    function Substitutions() {};\n    Substitutions.prototype = instance.subs;\n    var key;\n    var partial = new PartialTemplate();\n    partial.subs = new Substitutions();\n    partial.subsText = {};  //hehe. substext.\n    partial.buf = '';\n\n    stackSubs = stackSubs || {};\n    partial.stackSubs = stackSubs;\n    partial.subsText = stackText;\n    for (key in subs) {\n      if (!stackSubs[key]) stackSubs[key] = subs[key];\n    }\n    for (key in stackSubs) {\n      partial.subs[key] = stackSubs[key];\n    }\n\n    stackPartials = stackPartials || {};\n    partial.stackPartials = stackPartials;\n    for (key in partials) {\n      if (!stackPartials[key]) stackPartials[key] = partials[key];\n    }\n    for (key in stackPartials) {\n      partial.partials[key] = stackPartials[key];\n    }\n\n    return partial;\n  }\n\n  var rAmp = /&/g,\n      rLt = /</g,\n      rGt = />/g,\n      rApos = /\\'/g,\n      rQuot = /\\\"/g,\n      hChars = /[&<>\\\"\\']/;\n\n  function coerceToString(val) {\n    return String((val === null || val === undefined) ? '' : val);\n  }\n\n  function hoganEscape(str) {\n    str = coerceToString(str);\n    return hChars.test(str) ?\n      str\n        .replace(rAmp, '&amp;')\n        .replace(rLt, '&lt;')\n        .replace(rGt, '&gt;')\n        .replace(rApos, '&#39;')\n        .replace(rQuot, '&quot;') :\n      str;\n  }\n\n  var isArray = Array.isArray || function(a) {\n    return Object.prototype.toString.call(a) === '[object Array]';\n  };\n\n})(typeof exports !== 'undefined' ? exports : Hogan);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/hogan.js/lib/template.js\n ** module id = 6\n ** module chunks = 0\n **/","var H = require(\"hogan.js\");\nmodule.exports = function() { var T = new H.Template({code: function (c,p,i) { var t=this;t.b(i=i||\"\");t.b(\"<li title=\\\"\");t.b(t.v(t.f(\"title\",c,p,0)));t.b(\"\\\" class=\\\"ext-cards-card\\\">\");t.b(\"\\n\" + i);t.b(\"\t<div class=\\\"ext-cards-card-thumb\\\" \");if(t.s(t.f(\"hasThumbnail\",c,p,1),c,p,0,102,156,\"{{ }}\")){t.rs(c,p,function(c,p,t){t.b(\"style=\\\"background-image: url( '\");t.b(t.v(t.f(\"thumbnailUrl\",c,p,0)));t.b(\"' );\\\"\");});c.pop();}t.b(\"></div>\");t.b(\"\\n\" + i);t.b(\"\t<a href=\\\"\");t.b(t.v(t.f(\"url\",c,p,0)));t.b(\"\\\" aria-hidden=\\\"true\\\" tabindex=\\\"-1\\\"></a>\");t.b(\"\\n\" + i);t.b(\"\t<div class=\\\"ext-cards-card-detail\\\">\");t.b(\"\\n\" + i);t.b(\"\t\t<h3><a href=\\\"\");t.b(t.v(t.f(\"url\",c,p,0)));t.b(\"\\\">\");t.b(t.v(t.f(\"title\",c,p,0)));t.b(\"</a></h3>\");t.b(\"\\n\" + i);t.b(\"\t\t\");if(t.s(t.f(\"extract\",c,p,1),c,p,0,342,393,\"{{ }}\")){t.rs(c,p,function(c,p,t){t.b(\"<p class=\\\"ext-cards-card-extract\\\">\");t.b(t.v(t.f(\"extract\",c,p,0)));t.b(\"</p>\");});c.pop();}t.b(\"\\n\" + i);t.b(\"\t</div>\");t.b(\"\\n\" + i);t.b(\"</li>\");t.b(\"\\n\");return t.fl(); },partials: {}, subs: {  }}, \"<li title=\\\"{{ title }}\\\" class=\\\"ext-cards-card\\\">\\n\\t<div class=\\\"ext-cards-card-thumb\\\" {{# hasThumbnail }}style=\\\"background-image: url( '{{ thumbnailUrl }}' );\\\"{{/ hasThumbnail }}></div>\\n\\t<a href=\\\"{{ url }}\\\" aria-hidden=\\\"true\\\" tabindex=\\\"-1\\\"></a>\\n\\t<div class=\\\"ext-cards-card-detail\\\">\\n\\t\\t<h3><a href=\\\"{{ url }}\\\">{{ title }}</a></h3>\\n\\t\\t{{# extract }}<p class=\\\"ext-cards-card-extract\\\">{{ extract }}</p>{{/ extract }}\\n\\t</div>\\n</li>\\n\", H);return T; }();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/cards/card.hogan\n ** module id = 7\n ** module chunks = 0\n **/","var H = require(\"hogan.js\");\nmodule.exports = function() { var T = new H.Template({code: function (c,p,i) { var t=this;t.b(i=i||\"\");t.b(\"<ul class=\\\"ext-cards-card-list\\\">\");t.b(\"\\n\" + i);t.b(\"</ul>\");t.b(\"\\n\");return t.fl(); },partials: {}, subs: {  }}, \"<ul class=\\\"ext-cards-card-list\\\">\\n</ul>\\n\", H);return T; }();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/cards/cards.hogan\n ** module id = 8\n ** module chunks = 0\n **/","/**\n * Default thumbnail width in pixels: 80px\n * @readonly\n */\nvar THUMB_WIDTH = 80,\n\tCardModel = require( './CardModel' ),\n\tCardView = require( './CardView' ),\n\tCardListView = require( './CardListView' );\n\n/**\n * Gateway for interacting with an API\n * It can be used to retrieve information about article(s). In the future\n * it can also be used to update that information in the server.\n *\n * @class mw.cards.CardsGateway\n * @param {Object} options\n * @param {mw.Api} options.api an Api to use.\n */\nfunction CardsGateway( options ) {\n\tthis.api = options.api;\n}\nOO.initClass( CardsGateway );\n\n/**\n * Fetch information about articleTitles from the API\n * How to use:\n *\n *     @example\n *     var gateway = new mw.cards.CardsGateway( { api: new mw.Api() } );\n *\n *     // '1' and '2' are page titles, while 200 is the desired thumbnail width\n *     gateway.getCards( ['1', '2'], 200 ).done( function( cards ) {\n *         $( '#bodyContent' ).append( cards.$el );\n *     } );\n *\n * @param {String[]} articleTitles array of article titles\n * @param {Number} [thumbWidth] Thumbnail width in pixels. Defaults to\n *  {@link THUMB_WIDTH}\n * @return {jQuery.Deferred} the result resolves with a\n *  {@link mw.cards.CardListView card list}\n */\nCardsGateway.prototype.getCards = function ( articleTitles, thumbWidth ) {\n\tvar article,\n\t\tcardViews = [],\n\t\tresult = $.Deferred();\n\n\tif ( !articleTitles.length ) {\n\t\tresult.resolve( new CardListView( cardViews ) );\n\t\treturn result;\n\t}\n\n\tthis.api.get( {\n\t\taction: 'query',\n\t\tprop: 'extracts|pageimages',\n\t\texplaintext: true,\n\t\texlimit: articleTitles.length,\n\t\texintro: true,\n\t\texsentences: 1,\n\t\tpithumbsize: thumbWidth || THUMB_WIDTH,\n\t\ttitles: articleTitles.join( '|' ),\n\t\tcontinue: '',\n\t\tformatversion: 2\n\t} ).done( function ( data ) {\n\t\tif ( data.query && data.query.pages ) {\n\t\t\tcardViews = $.map( data.query.pages, function ( page ) {\n\t\t\t\tarticle = {\n\t\t\t\t\ttitle: page.title,\n\t\t\t\t\turl: mw.util.getUrl( page.title ),\n\t\t\t\t\thasThumbnail: false\n\t\t\t\t};\n\n\t\t\t\tif ( page.thumbnail && isValidThumbnail( page.thumbnail ) ) {\n\t\t\t\t\tarticle.hasThumbnail = true;\n\t\t\t\t\tarticle.thumbnailUrl = page.thumbnail.source;\n\t\t\t\t}\n\n\t\t\t\tif ( page.extract ) {\n\t\t\t\t\tarticle.extract = page.extract;\n\t\t\t\t}\n\n\t\t\t\treturn new CardView( new CardModel( article ) );\n\t\t\t} );\n\t\t}\n\t\tresult.resolve( new CardListView( cardViews ) );\n\t} ).fail( function () {\n\t\tresult.resolve( new CardListView( cardViews ) );\n\t} );\n\n\treturn result;\n};\n\n/**\n * @ignore\n */\nfunction isValidThumbnail( thumb ) {\n\treturn thumb.source.substr( 0, 7 ) === 'http://' || thumb.source.substr( 0, 8 ) === 'https://';\n}\n\nmodule.exports = CardsGateway;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/cards/CardsGateway.js\n ** module id = 9\n ** module chunks = 0\n **/","/*! https://mths.be/cssescape v1.1.0 by @mathias | MIT license */\n;(function(root) {\n\n\tif (!root.CSS) {\n\t\troot.CSS = {};\n\t}\n\n\tvar CSS = root.CSS;\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tif (!CSS.escape) {\n\t\t// https://drafts.csswg.org/cssom/#serialize-an-identifier\n\t\tCSS.escape = function(value) {\n\t\t\tvar string = String(value);\n\t\t\tvar length = string.length;\n\t\t\tvar index = -1;\n\t\t\tvar codeUnit;\n\t\t\tvar result = '';\n\t\t\tvar firstCodeUnit = string.charCodeAt(0);\n\t\t\twhile (++index < length) {\n\t\t\t\tcodeUnit = string.charCodeAt(index);\n\t\t\t\t// Note: there’s no need to special-case astral symbols, surrogate\n\t\t\t\t// pairs, or lone surrogates.\n\n\t\t\t\t// If the character is NULL (U+0000), then throw an\n\t\t\t\t// `InvalidCharacterError` exception and terminate these steps.\n\t\t\t\tif (codeUnit == 0x0000) {\n\t\t\t\t\tthrow new InvalidCharacterError(\n\t\t\t\t\t\t'Invalid character: the input contains U+0000.'\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t// If the character is in the range [\\1-\\1F] (U+0001 to U+001F) or is\n\t\t\t\t\t// U+007F, […]\n\t\t\t\t\t(codeUnit >= 0x0001 && codeUnit <= 0x001F) || codeUnit == 0x007F ||\n\t\t\t\t\t// If the character is the first character and is in the range [0-9]\n\t\t\t\t\t// (U+0030 to U+0039), […]\n\t\t\t\t\t(index == 0 && codeUnit >= 0x0030 && codeUnit <= 0x0039) ||\n\t\t\t\t\t// If the character is the second character and is in the range [0-9]\n\t\t\t\t\t// (U+0030 to U+0039) and the first character is a `-` (U+002D), […]\n\t\t\t\t\t(\n\t\t\t\t\t\tindex == 1 &&\n\t\t\t\t\t\tcodeUnit >= 0x0030 && codeUnit <= 0x0039 &&\n\t\t\t\t\t\tfirstCodeUnit == 0x002D\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\t// https://drafts.csswg.org/cssom/#escape-a-character-as-code-point\n\t\t\t\t\tresult += '\\\\' + codeUnit.toString(16) + ' ';\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t// If the character is the first character and is a `-` (U+002D), and\n\t\t\t\t\t// there is no second character, […]\n\t\t\t\t\tindex == 0 &&\n\t\t\t\t\tlength == 1 &&\n\t\t\t\t\tcodeUnit == 0x002D\n\t\t\t\t) {\n\t\t\t\t\tresult += '\\\\' + string.charAt(index);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// If the character is not handled by one of the above rules and is\n\t\t\t\t// greater than or equal to U+0080, is `-` (U+002D) or `_` (U+005F), or\n\t\t\t\t// is in one of the ranges [0-9] (U+0030 to U+0039), [A-Z] (U+0041 to\n\t\t\t\t// U+005A), or [a-z] (U+0061 to U+007A), […]\n\t\t\t\tif (\n\t\t\t\t\tcodeUnit >= 0x0080 ||\n\t\t\t\t\tcodeUnit == 0x002D ||\n\t\t\t\t\tcodeUnit == 0x005F ||\n\t\t\t\t\tcodeUnit >= 0x0030 && codeUnit <= 0x0039 ||\n\t\t\t\t\tcodeUnit >= 0x0041 && codeUnit <= 0x005A ||\n\t\t\t\t\tcodeUnit >= 0x0061 && codeUnit <= 0x007A\n\t\t\t\t) {\n\t\t\t\t\t// the character itself\n\t\t\t\t\tresult += string.charAt(index);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, the escaped character.\n\t\t\t\t// https://drafts.csswg.org/cssom/#escape-a-character\n\t\t\t\tresult += '\\\\' + string.charAt(index);\n\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\t}\n\n}(typeof global != 'undefined' ? global : this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/cards/css.escape.js\n ** module id = 10\n ** module chunks = 0\n **/"],"sourceRoot":""}